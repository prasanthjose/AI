# import the necessary packages
import numpy as np
from urllib.request import urlopen
import cv2
from matplotlib import pyplot as plt

# METHOD #1: OpenCV, NumPy, and urllib
def url_to_image(url):
	# download the image, convert it to a NumPy array, and then read
	# it into OpenCV format
	resp = urlopen(url)
	image = np.asarray(bytearray(resp.read()), dtype="uint8")
	image = cv2.imdecode(image, cv2.IMREAD_COLOR)
 
	# return the image
	return image
  
  image = url_to_image("https://fontsarena-cd5e.kxcdn.com/wp-content/uploads/2019/04/helvetica-now-font-400x364.png")
  
from google.colab.patches import cv2_imshow
cv2_imshow(image)


#vertical edge detector
kernel = np.float32([[-1,2,-1],[-1,2,-1],[-1,2,-1]])
dst = cv2.filter2D(image,-1,kernel)
cv2_imshow(dst)


#Horizontal Edge Detector
kernel = np.float32([[-1,-1,-1],[2,2,2],[-1,-1,-1]])
dst = cv2.filter2D(image,-1,kernel)
cv2_imshow(dst)

#45 Degree Angle Detector (either)
kernel = np.float32([[2,-1,-1],[-1,2,-1],[-1,-1,2]])
dst = cv2.filter2D(image,-1,kernel)
cv2_imshow(dst)

#Blur Kernel
kernel = np.float32([[-1,0,1],[0,0,0],[-1,0,1]])
dst = cv2.filter2D(image,-1,kernel)
cv2_imshow(dst

#Sharpen Kernel
kernel = np.float32([[-1,1,0],[-1,1,0],[-1,1,0]])
dst = cv2.filter2D(image,-1,kernel)
cv2_imshow(dst)
